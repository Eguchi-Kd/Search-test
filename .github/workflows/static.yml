# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

#シークレット使用
env:
  SPREADSHEET_ID1: ${{secrets.SPREADSHEET_ID}}

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js 20.18.0
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0
          
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Initialize Yarn
      #   run: yarn init -y

      # - name: Install Dependencies (prod)
      #   run: yarn install --frozen-lockfile --production

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Run Tests (JEST)
        run: SPREADSHEET_ID=${{secrets.SPREADSHEET_ID}} node secret.js
        env:
          SPREADSHEET_ID: ${{secrets.SPREADSHEET_ID}}
      

      # - name: Run secret
      #   env:
      #     SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
      #   run: npm run build
